{"version":3,"sources":["scripts/main.js"],"names":["headRow","document","querySelector","tbody","list","querySelectorAll","addEventListener","e","target","tagName","i","callback","children","indexOf","a","b","innerText","getSalary","localeCompare","innerHTML","sort","forEach","tr","append","row","slice","split","join"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAUC,SAASC,cAAc,YACjCC,EAAQF,SAASC,cAAc,SAC/BE,EAAWD,EAAAA,EAAME,iBAAiB,OAExCL,EAAQM,iBAAiB,QAAS,SAAAC,GAC5BA,GAAqB,OAArBA,EAAEC,OAAOC,QAATF,CAIEG,IACFC,EADED,EAAI,EAAIV,EAAQY,UAAUC,QAAQN,EAAEC,QAGlCE,OAAAA,GACD,KAAA,EACHC,EAAW,SAACG,EAAGC,GAAMD,OAAAA,EAAEF,SAASF,GAAGM,UAAYD,EAAEH,SAASF,GAAGM,WAC7D,MAEG,KAAA,EACHL,EAAW,SAACG,EAAGC,GAAME,OAAAA,EAAUH,GAAKG,EAAUF,IAC9C,MAEF,QACEJ,EAAW,SAACG,EAAGC,GACND,OAAAA,EAAEF,SAASF,GAAGM,UAAUE,cAAcH,EAAEH,SAASF,GAAGM,YAQjEb,EAAMgB,UAAY,GAClBf,EAAKgB,KAAKT,GAAUU,QAAQ,SAAAC,GAAMnB,OAAAA,EAAMoB,OAAOD,KALtCL,SAAAA,EAAUO,GACV,OAACA,EAAIZ,SAAS,GAAGI,UAAUS,MAAM,GAAGC,MAAM,KAAKC,KAAK","file":"main.a3315c8e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst headRow = document.querySelector('thead tr');\nconst tbody = document.querySelector('tbody');\nconst list = [...tbody.querySelectorAll('tr')];\n\nheadRow.addEventListener('click', e => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const i = [...headRow.children].indexOf(e.target);\n  let callback;\n\n  switch (i) {\n    case 2:\n      callback = (a, b) => a.children[i].innerText - b.children[i].innerText;\n      break;\n\n    case 3:\n      callback = (a, b) => getSalary(a) - getSalary(b);\n      break;\n\n    default:\n      callback = (a, b) => {\n        return a.children[i].innerText.localeCompare(b.children[i].innerText);\n      };\n  }\n\n  function getSalary(row) {\n    return +row.children[3].innerText.slice(1).split(',').join('');\n  }\n\n  tbody.innerHTML = '';\n  list.sort(callback).forEach(tr => tbody.append(tr));\n});\n"]}